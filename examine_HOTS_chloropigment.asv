% File to open and examine HOTS chloropigment data (1988 - 2021).

% Clear/close unnecessary code, variables, etc.
close all; clc; clear;

% Set Figure Parameters
set(groot,'defaultAxesXGrid','on');
set(groot,'defaultAxesYGrid','on');
set(groot, 'defaultFigureUnits', 'centimeters', 'defaultFigurePosition', [3 5 28 12]);
set(0,'defaultAxesFontSize',16);

%% Open data file and extract variables; add Barone's routines to path
data = importdata('data/hots-chloropigment.txt').data;
data1 = importdata('data\hots-chl-T-S-nit-1000.txt').data;
data256 = importdata('data\hots-chl-T-S-nit-256.txt').data;

% 200db
crn = data(:,1);
day = data(:,2);
pressure = data(:,3);
chloro = data(:,4);
chloro(chloro==-9) = NaN; % Set -9 = NaN;
chloro(chloro<0) = 0; % remove negative values

% 256db
crn2 = data256(:,1);
day2 = data256(:,2);
pressure2 = data256(:,3);
chloro2 = data256(:,6);
chloro2(chloro2==-9) = NaN; % Set -9 = NaN;
chloro2(chloro2<0) = 0; % remove negative values

% 1000db
crn1 = data1(:,1);
day1 = data1(:,2);
pressure1 = data1(:,3);
chloro1 = data1(:,6);
chloro1(chloro1==-9) = NaN; % Set -9 = NaN;
chloro1(chloro1<0) = 0; % remove negative values

addpath("baroneRoutines\");

nb = 100;

%% Examine First Days of Data

ax1 = figure;
subplot(1,3,1)
plot(chloro(1:101),-pressure(1:101),'DisplayName','CRN 1: Nov 88');
hold on
plot(chloro(102:202),-pressure(102:202),'DisplayName','CRN 2: Dec 88');
plot(chloro(203:303),-pressure(203:303),'DisplayName','CRN 3: Jan 89');
hold off
legend('Location','best');
ylabel('pressure [db]');
xlabel('chl [ug/L]');
title('chl(p) [200db]');

subplot(1,3,2)
plot(chloro1(1:501),-pressure1(1:501),'DisplayName','CRN 1: Nov 88');
hold on
plot(chloro1(502:1002),-pressure1(502:1002),'DisplayName','CRN 2: Dec 88');
plot(chloro1(1003:1503),-pressure1(1003:1503),'DisplayName','CRN 3: Jan 89');
hold off
legend('Location','best');
ylabel('pressure [db]');
xlabel('chl [ug/L]');
title('chl(p) [1000db]');

subplot(1,3,3)
plot(chloro2(1:129),-pressure2(1:129),'DisplayName','CRN 1: Nov 88');
hold on
plot(chloro2(130:258),-pressure2(130:258),'DisplayName','CRN 2: Dec 88');
plot(chloro2(259:387),-pressure2(259:387),'DisplayName','CRN 3: Jan 89');
hold off
legend('Location','best');
ylabel('pressure [db]');
xlabel('chl [ug/L]');
title('chl(p) [256db]');

exportgraphics(ax1,'figures/ctd-day-1.png');

%% Simple Gaussian Model of DCM: Platt et al (1988)
% Equation 2.1 from B. Barone (2009), based on Platt et al. (1988)

C0 = 0.01; h = 45; zm = -105; sigma_ = 25; z = 0:-5:-200;

Cz = C0 + (h/(sigma_*sqrt(2*pi)))*exp(-(z-zm).^2/2*sigma_.^2);

%% DCM Model: Uitz et al (2006)

% slope of the background concentration
s = -0.0003;

CzU = C0 + s*z + (h/(sigma_*sqrt(2*pi)))*exp(-(z-zm).^2/2*sigma_.^2);

%% DCM Model Plot

figure;
plot(Cz,z,'DisplayName','Platt et al. (1988)');
hold on
plot(CzU,z,'DisplayName','Uitz et al (2006)');
plot(chloro(1:101),-pressure(1:101),'DisplayName','Day One CTD');
plot(chloro(102:202),-pressure(102:202),'DisplayName','Day Two CTD');
hold off
legend();

%% ya no funciona
% a=[1 2 3 5 6 7 9 10 13 14];
% insertNanIndex = [0 diff(a)>1];
% % insertValue = (1-insertNanIndex)./0;
% insertValue = NaN(10,1);
% b = [a(5) insertValue];
% % b_tmp = [a(1) insertValue];
% % b = b_tmp(:)';
% b(isinf(b)) = [];

%% Reshape into 2D Matrix: 200db

chloro2D = reshape(chloro,101,[]);
days = day + datetime(1988,09,30);
days = reshape(days,101,[]);
pres = reshape(pressure,101,[]);

%% Reshape into 2D Matrix: 256db
noOfZeroDbs256 = find(~pressure2);
assert(length(noOfZeroDbs256)==329);
noOf256Dbs256 = find(pressure2 == 256);
assert(length(noOf256Dbs256)==329);

chloro256 = reshape(chloro2,129,[]);
days256 = day2 + datetime(1988,09,30);
days256 = reshape(days256,129,[]);
pres256 = reshape(pressure2,129,[]);

%% Reshape into 2D Matrix: 1000db

% There are two casts where the CTD does not go to the full depth. I would
% like to fill these missing values with NaNs and be able to plot a full
% depth Hovmoeller diagram of chl. But I need to return to this later.

% % CRN = 329
% noOfZeroDbs = find(~pressure1);
% assert(length(noOfZeroDbs)==329);
% 
% counter = 0;
% counterPression = [];
% for i=1:length(pressure1)-1
%     if diff(pressure1(i:i+1)) < 2 && diff(pressure1(i:i+1)) > -999
%         counter = counter + 1;
%         counterPression = [counterPression i];
%         disp(i);
%     end
% end
% 
% % Insert NaNs
% copyPressure1 = pressure1;
% Nangroup1 = NaN((1000-266)/2,1);
% Nangroup2 = NaN((1000-270)/2,1);
% copyPressure1(counterPression(1))
% 
% % copyPressure1 = [copyPressure1(1:counterPression(1)),Nangroup1,copyPressure1(counterPression(1)+1:end)];
% 
% copytest = [copyPressure1(1:counterPression(1))',Nangroup1'];
% copytest = [copytest,copyPressure1(counterPression(1)+1:counterPression(2))'];
% copytest = [copytest,Nangroup2'];
% copytest = [copytest,copyPressure1(counterPression(2)+1:end)'];
% %     copyPressure1(counterPression(1)+1:counterPression(2)),Nangroup2,...
% %     copyPressure1(counterPression(2)+1:end)];
% 
% % chloro1_2D = reshape(chloro1,501,[]);
% % days1 = day1 + datetime(1988,09,30);
% % days1 = reshape(days1,501,[]);
% pres1 = reshape(copytest,501,[]);

%% grid shit

[t_grid,p_grid] = meshgrid(datenum(days(1,:)),pres(:,1));
time = datetime(t_grid(1,:),'ConvertFrom','datenum');

[t_grid_256,p_grid_256] = meshgrid(datenum(days256(1,:)),pres256(:,1));
time256 = datetime(t_grid_256(1,:),'ConvertFrom','datenum');

% [t1_grid,p1_grid] = meshgrid(datenum(days1(1,:)),pres1(:,1));
% time1 = datetime(t_grid1(1,:),'ConvertFrom','datenum');

save('datafiles\chloro',"chloro2D","pres","t_grid"',"p_grid","time",...
    "t_grid_256","p_grid_256","time256");


%% Fluorescence Depth- and Time-Series (1988-2022): Eulerian View

ax2 = figure;
contourf(t_grid,p_grid,chloro2D,linspace(0,1.4,nb),'LineColor','auto');
set(gca,'Ydir','reverse')
datetick('x','yyyy mmm','keeplimits');
colormap(flipud(cbrewer2('Spectral',nb)));
c = colorbar;
c.Label.String = 'chloropigment (fluorescence) [ug/L]';
xlabel('Time');
ylabel('Depth [db]');
title('Chloropigment: 1988 - 2021 (Eulerian) [200 db]');

exportgraphics(ax2,'figures/fluorescence-1988-2021_eulerian.png');

ax3 = figure;
contourf(t_grid_256,p_grid_256,chloro256,linspace(0,1.4,nb),'LineColor','auto');
set(gca,'Ydir','reverse')
datetick('x','yyyy mmm','keeplimits');
colormap(flipud(cbrewer2('Spectral',nb)));
c = colorbar;
c.Label.String = 'chloropigment (fluorescence) [ug/L]';
xlabel('Time');
ylabel('Depth [db]');
title('Chloropigment: 1988 - 2021 (Eulerian) [256db]');

exportgraphics(ax3,'figures/fluorescence-1988-2021_256_eulerian.png');

%% Normalised Chloropigment Depth- and Time-Series (1988-2020): Eulerian

chloro2D_n = zeros(101,329);
chloro256_n = zeros(129,329);

for j=1:329
    chloro2D_n(:,j) = chloro2D(:,j)/max(chloro2D(:,j));
    chloro256_n(:,j) = chloro256(:,j)/max(chloro256(:,j));
end
save("datafiles\chloro.mat","chloro2D_n",'chloro256_n','-append');

% Test normalisation
assert(max(max(chloro2D_n)) == 1); % Throws error if not equal to one
assert(min(min(chloro2D_n)) == 0); % Throws error if not equal to zero
assert(max(max(chloro256_n)) == 1); % Throws error if not equal to one
assert(min(min(chloro256_n)) == 0); % Throws error if not equal to zero

ax4 = figure;
contourf(t_grid,p_grid,chloro2D_n,linspace(0,1.4,nb),'LineColor','auto');
set(gca,'Ydir','reverse')
datetick('x','yyyy mmm','keeplimits');
colormap(flipud(cbrewer2('Spectral',nb)));
c = colorbar;
c.Label.String = 'chloropigment, normalised relative to DCM at each time';
xlabel('Time');
ylabel('Depth [db]');
title('Chloropigment: 1988 - 2021 (Eulerian, Normalised)');

exportgraphics(ax4,'figures/fluorescence_norm-1988-2021_eulerianView.png');

ax4a = figure;
contourf(t_grid_256,p_grid_256,chloro256_n,linspace(0,1.4,nb),'LineColor','auto');
set(gca,'Ydir','reverse')
datetick('x','yyyy mmm','keeplimits');
colormap(flipud(cbrewer2('Spectral',nb)));
c = colorbar;
c.Label.String = 'chloropigment, normalised relative to DCM at each time';
xlabel('Time');
ylabel('Depth [db]');
title('Chloropigment: 1988 - 2021 (Eulerian, Normalised) [256 db]');

exportgraphics(ax4a,'figures/fluorescence_norm-1988-2021_eulerian256.png');
%% Kurtosis and Skewness across depth for (normalised) chloropigment depth- and time-series (Eulerian)

kurt_chl = kurtosis(chloro2D);
skew_chl = skewness(chloro2D);

kurt_chl_rm = movmean(kurt_chl,10,'omitnan');
skew_chl_rm = movmean(skew_chl,10,'omitnan');
% The normalised data of course has the same kurtosis and skewness
% kurt_chl_n = kurtosis(chloro2D_n);
% skew_chl_n = skewness(chloro2D_n);

ax5 = figure;
plot(time,kurt_chl,'DisplayName','Kurtosis');
hold on
plot(time,kurt_chl_rm,'DisplayName','~12mth running-mean (10-point centred moving average');
% plot(t_grid(1,:),kurt_chl_n,'DisplayName','Kurtosis (Norm)');
yline(3,':','DisplayName','Normal Distribution');
hold off
legend();
title('Kurtosis: Chloropigments, 1988-2021 (Eulerian)');

exportgraphics(ax5,'figures/fluorescence_norm-1988-2021_eulerianKurtosis.png');

ax6 = figure;
plot(time,skew_chl,'DisplayName','Skewness');
hold on
plot(time,skew_chl_rm,'DisplayName','~12mth running mean (10-point centred moving average)');
hold off
% plot(t_grid(1,:),skew_chl_n,'DisplayName','Skewness (norm)');
legend();
datetick('x','yyyy mmm','keeplimits');
title('Skewness: Chloropigments, 1988-2021 (Eulerian)');

exportgraphics(ax6,'figures/fluorescence_norm-1988-2021_eulerianSkewness.png');


%% Fluorescence Depth- and Time-Series (1988-2022): Lagrangian View

val = zeros(1,329); idx = zeros(1,329); 
val256 = zeros(1,329); idx256 = zeros(1,329);

% Find the DCM
for i=1:329
    [val(i),idx(i)] = max(chloro2D(:,i)); % 200 db
    [val256(i),idx256(i)] = max(chloro256(:,i));
end

p_lang = zeros(101,329); p256_lang = zeros(129,329);

% Put pressure in terms of DCM
for i = 1:329
    p_lang(:,i) = pres(:,i) - pres(idx(i),i);
    p256_lang(:,i) = pres256(:,i) - pres256(idx256(i),i);
end

% Put fluorescence in terms of DCM
% Shift the original fluorescence data such that the DCM is centred
chloro_lang = zeros(101,329);
midpt = 51;
offset = midpt - idx;
chloro256_lang = zeros(129,329);
midpt256 = 65;
offset256 = midpt256 - idx256;

for i = 1:329
    chloro_lang(:,i) = circshift(chloro2D(:,i),offset(i));
    if offset(i) > -1 && offset(i) < 40
        disp(i);
        chloro_lang(1:offset(i),i) = NaN;
    elseif offset(i) == -1
        chloro_lang(end,i) = NaN;
    elseif offset(i) < -1 && offset(i) > -40
        disp(i);
        chloro_lang((end+offset(i)):end,i) = NaN;
    elseif abs(offset(i)) > 40
        chloro_lang(:,i) = NaN;
    end
end


for i = 1:329
    chloro256_lang(:,i) = circshift(chloro256(:,i),offset256(i));
    if offset256(i) > -1 && offset256(i) < 40
        disp(i);
        chloro256_lang(1:offset256(i),i) = NaN;
    elseif offset256(i) == -1
        chloro256_lang(end,i) = NaN;
    elseif offset256(i) < -1 && offset256(i) > -40
        disp(i);
        chloro256_lang((end+offset256(i)):end,i) = NaN;
    elseif abs(offset256(i)) > 40
        chloro256_lang(:,i) = NaN;
    end
end

%%
save('datafiles\chloro',"chloro2D","pres","t_grid"',"p_grid","time", ...
    'chloro256_n','chloro256',...
    "t_grid_256","p_grid_256","time256");

%%
% Create meshgrid for time and pressure in Lagrangian view
[t_lang_grid,p_lang_grid] = meshgrid(datenum(days(1,:)),pres(:,1)-100);
[t_lang_grid256,p_lang_grid256] = meshgrid(datenum(days256(1,:)),pres256(:,1)-128);

save('datafiles\chloro','p_lang_grid256','-append');

%%
% Make a filled contour plot of the DCM in the Lagrangian perspective
ax7 = figure;
contourf(t_lang_grid,p_lang_grid,chloro_lang,linspace(0,1.4,nb),'LineColor','auto');
set(gca,'Ydir','reverse')
datetick('x','yyyy mmm','keeplimits');
colormap(flipud(cbrewer2('Spectral',nb)));
c = colorbar;
c.Label.String = 'chloropigment (fluorescence) [ug/L]';
xlabel('Time');
ylabel('Depth [db]');
title('Chloropigment: 1988 - 2021 (Lagrangian)');

exportgraphics(ax7,'figures/fluorescence-1988-2021_lagrangianView.png');

ax7a = figure;
contourf(t_lang_grid256,p_lang_grid256,chloro256_lang,linspace(0,1.4,nb),'LineColor','auto');
set(gca,'Ydir','reverse')
datetick('x','yyyy mmm','keeplimits');
colormap(flipud(cbrewer2('Spectral',nb)));
c = colorbar;
c.Label.String = 'chloropigment (fluorescence) [ug/L]';
ylim([-110 110]);
xlabel('Time');
ylabel('Depth [db]');
title('Chloropigment: 1988 - 2021 (Lagrangian) [256 db]');

exportgraphics(ax7a,'figures/fluorescence-1988-2021_lagrangian256.png');

%% Lagrangian, Normalised

chloro_lang_n = zeros(101,329); chloro256_lang_n = zeros(129,329);

for j=1:329
    chloro_lang_n(:,j) = chloro_lang(:,j)/max(chloro_lang(:,j));
    chloro256_lang_n(:,j) = chloro256_lang(:,j)/max(chloro256_lang(:,j));
end

save('datafiles\chloro', 'chloro256_lang', 'p256_lang', ...
    'chloro256_lang_n','-append');


ax8 = figure;
contourf(t_lang_grid,p_lang_grid,chloro_lang_n,linspace(0,1.4,nb),'LineColor','auto');
set(gca,'Ydir','reverse')
datetick('x','yyyy mmm','keeplimits');
colormap(flipud(cbrewer2('Spectral',nb)));
c = colorbar;
c.Label.String = 'chloropigment, normalised relative to DCM';
xlabel('Time');
ylabel('Depth [db]');
title('Chloropigment: 1988 - 2021 (Lagrangian, Normalised)');

exportgraphics(ax8,'figures/fluorescence_norm-1988-2021_lagrangianView.png');

ax8a = figure;
contourf(t_lang_grid256,p_lang_grid256,chloro256_lang_n,linspace(0,1.4,nb),'LineColor','auto');
set(gca,'Ydir','reverse')
datetick('x','yyyy mmm','keeplimits');
colormap(flipud(cbrewer2('Spectral',nb)));
c = colorbar;
c.Label.String = 'chloropigment, normalised relative to DCM';
xlabel('Time');
ylabel('Depth [db]');
title('Chloropigment: 1988 - 2021 (Lagrangian, Normalised, 256 db)');

exportgraphics(ax8a,'figures/fluorescence_norm-1988-2021_lagrangian256.png');

%% Kurtosis and Skewness across depth for normalised chloropigment depth- and time-series (Lagrangian)

kurt_chl_lang = kurtosis(chloro_lang);
kurt_chl_lang_rm = movmean(kurt_chl_lang,10,'omitnan');
skew_chl_lang = skewness(chloro_lang);
skew_chl_lang_rm = movmean(skew_chl_lang,10,'omitnan');

% Again the normalised data exhibits the same kurtosis and skew as the
% non-normalised data
% kurt_chl_lang_n = kurtosis(chloro_lang_n);
% skew_chl_lang_n = skewness(chloro_lang_n);

ax9 = figure;
plot(time,kurt_chl_lang,'DisplayName','Kurtosis');
hold on
plot(time,kurt_chl_lang_rm,'DisplayName','~12mth running mean (10-point centred moving average');
% plot(t_grid(1,:),kurt_chl_lang_n,'DisplayName','Kurtosis (norm)');
yline(3,':','DisplayName','Normal Distribution');
hold off
legend();
datetick('x','yyyy mmm','keeplimits');
title('Kurtosis: Chloropigments, 1988-2021 (Lagrangian)');

exportgraphics(ax9,'figures/fluorescence_norm-1988-2021_lagrangianKurtosis.png');

ax10 = figure;
plot(time,skew_chl_lang,'DisplayName','Skewness');
hold on
plot(time,skew_chl_lang_rm,'DisplayName','~12mth running mean (10-point centred moving average)');
% plot(t_grid(1,:),skew_chl_lang_n,'DisplayName','Skewness (norm)');
hold off
legend();
datetick('x','yyyy mmm','keeplimits');
title('Skewness: Chloropigments, 1988-2021 (Lagrangian)');

exportgraphics(ax10,'figures/fluorescence_norm-1988-2021_lagrangianSkewness.png');

%% Histograms at Depth

set(groot, 'defaultFigureUnits', 'centimeters', 'defaultFigurePosition', [5 5 35 20]);
nbins = 25; 


%% redo hists more simply

figure;
subplot(2,2,1)
histogram(chloro2D(6,:),nbins,'DisplayName','10 db');
hold on
histogram(chloro2D(36,:),nbins,'DisplayName','70 db');
histogram(chloro2D(62,:),nbins,'DisplayName','122 db');
hold off

subplot(2,2,2)
histogram(log(chloro2D(6,:)),nbins,'DisplayName','10 db');
hold on
histogram(log(chloro2D(36,:)),nbins,'DisplayName','70 db');
histogram(log(chloro2D(62,:)),nbins,'DisplayName','122 db');
hold off

subplot(2,2,3)
histogram(chloro_lang(2,:),nbins,'DisplayName','10 db');
hold on
histogram(chloro_lang(26,:),nbins,'DisplayName','10 db');
histogram(chloro_lang(45,:),nbins,'DisplayName','10 db');
histogram(chloro_lang(58,:),nbins,'DisplayName','10 db');
histogram(chloro_lang(77,:),nbins,'DisplayName','10 db');
hold off

subplot(2,2,4)
histogram(log(chloro_lang(2,:)),nbins,'DisplayName','10 db');
hold on
histogram(log(chloro_lang(26,:)),nbins,'DisplayName','10 db');
histogram(log(chloro_lang(45,:)),nbins,'DisplayName','10 db');
histogram(log(chloro_lang(58,:)),nbins,'DisplayName','10 db');
histogram(log(chloro_lang(77,:)),nbins,'DisplayName','10 db');
hold off

%%

% Eulerian
% [histFreq,histXout] = histogram(chloro2D(6,:),nbins);
% histFreq = histogram(chloro2D(6,:),nbins);
% [histFreq_log,histXout_log] = histogram(log(chloro2D(6,:)),nbins);
% [histFreq36,histXout36] = histogram(chloro2D(36,:),nbins);
% histFreq36 = histogram(chloro2D(36,:),nbins);
% [histFreq36_log,histXout36_log] = histogram(log(chloro2D(36,:)),nbins);
% [histFreq62,histXout62] = histogram(chloro2D(62,:),nbins);
% [histFreq62_log,histXout62_log] = histogram(log(chloro2D(62,:)),nbins);

% Lagrangian
% [histFreqL,histXoutL] = histogram(chloro_lang(2,:),nbins);
% [histFreqL_log,histXoutL_log] = histogram(log(chloro_lang(2,:)),nbins);
% [histFreq26L,histXout26L] = histogram(chloro_lang(26,:),nbins);
% [histFreq26L_log,histXout26L_log] = histogram(log(chloro_lang(26,:)),nbins);
% [histFreq45L,histXout45L] = histogram(chloro_lang(45,:),nbins);
% [histFreq45L_log,histXout45L_log] = histogram(log(chloro_lang(45,:)),nbins);
% [histFreq12L,histXout12L] = histogram(chloro_lang(58,:),nbins);
% [histFreq12L_log,histXout12L_log] = histogram(log(chloro_lang(58,:)),nbins);
% [histFreq50L,histXout50L] = histogram(chloro_lang(77,:),nbins);
% [histFreq50L_log,histXout50L_log] = histogram(log(chloro_lang(77,:)),nbins);

% % UPDATE: hist(log)!!
ax11 = figure;
% sgtitle('Histograms of Concentration at Different Depths','FontSize',20);
% subplot(2,2,1)
% bar(histXout, histFreq/sum(histFreq),'DisplayName','10 db');
% hold on
% bar(histXout36,histFreq36/sum(histFreq36),'DisplayName','70 db');
% bar(histXout62,histFreq62/sum(histFreq62),'DisplayName','122 db');
% xlim([0 1.65]);
% legend();
% xlabel('chloropigment (\mu g L^{-1})');
% ylabel('Frequency');
% title('Frequency of Concentration (Eulerian)');
% 
% subplot(2,2,2)
% bar(histXout_log, histFreq/sum(histFreq_log),'DisplayName','10 db');
% hold on
% bar(histXout36_log,histFreq36/sum(histFreq36_log),'DisplayName','70 db');
% bar(histXout62_log,histFreq62/sum(histFreq62_log),'DisplayName','122 db');
% xlim([-9 0.2]);
% legend();
% xlabel('chloropigment (\mu g L^{-1})');
% ylabel('Frequency');
% title('Frequency of Log-Concentration (Eulerian)');

% subplot(2,2,3)
% bar(histXoutL, histFreqL/sum(histFreqL),'DisplayName','-100 db');
% hold on
% bar(histXout26L,histFreq26L/sum(histFreq26L),'DisplayName','-50 db');
% bar(histXout45L,histFreq45L/sum(histFreq45L),'DisplayName','-12 db');
% bar(histXout12L,histFreq12L/sum(histFreq12L),'DisplayName','+12 db');
% bar(histXout50L,histFreq50L/sum(histFreq50L),'DisplayName','+50 db');
% xlim([0 1.65]);
% legend();
% xlabel('chloropigment (\mu g L^{-1})');
% ylabel('Frequency');
% title('Frequency of Log-Concentration (Lagrangian)');

% subplot(2,2,4)
% bar(histXoutL_log, histFreqL/sum(histFreqL_log),'DisplayName','-100 db');
% hold on
% bar(histXout26L_log,histFreq26L/sum(histFreq26L_log),'DisplayName','-50 db');
% bar(histXout45L_log,histFreq45L/sum(histFreq45L_log),'DisplayName','-12 db');
% bar(histXout12L_log,histFreq12L/sum(histFreq12L_log),'DisplayName','+12 db');
% bar(histXout50L_log,histFreq50L/sum(histFreq50L_log),'DisplayName','+50 db');
% xlim([-9 0.2]);
% legend();
% xlabel('chloropigment (\mu g L^{-1})');
% ylabel('Frequency');
% title('Frequency of Log-Concentration (Lagrangian)');
% 
% exportgraphics(ax11,'figures/hist_chloropig_selectDepths_1989-2021.png');

%% DCM Hovmoeller: Seasonality Removed

chloro256_rm = movmean(chloro256,10,2,'omitnan');
chloro256_lang_rm = movmean(chloro256_lang,10,2,'omitnan');

ax12 = figure;
contourf(t_lang_grid256,p_lang_grid256,chloro256_lang_rm,linspace(0,1.4,nb),'LineColor','auto');
set(gca,'Ydir','reverse')
datetick('x','yyyy mmm','keeplimits');
colormap(flipud(cbrewer2('Spectral',nb)));
c = colorbar;
c.Label.String = 'chloropigment, seasonality removed';
xlabel('Time');
ylabel('Depth [db]');
title('Chloropigment: 1988 - 2021 (Lagrangian, Seasonality Removed, 256 db)');

exportgraphics(ax12,'figures/fluorescence_1988-2021_lagrangian256_seasonalityRemoved.png');

ax13 = figure;
contourf(t_lang_grid256,p_lang_grid256,chloro256_rm,linspace(0,1.4,nb),'LineColor','auto');
set(gca,'Ydir','reverse')
datetick('x','yyyy mmm','keeplimits');
colormap(flipud(cbrewer2('Spectral',nb)));
c = colorbar;
c.Label.String = 'chloropigment, seasonality removed';
xlabel('Time');
ylabel('Depth [db]');
title('Chloropigment: 1988 - 2021 (Eulerian, Seasonality Removed, 256 db)');

exportgraphics(ax13,'figures/fluorescence_1988-2021_eulerian256_seasonalityRemoved.png');

%% FFT on DCM

% For now, run the weird FFT on the seasonally-averaged data. Maybe this
% gives something interesting.

y = zeros(129,329);

% Maybe filling missing data not needed here.
for i = 1:129
    %chlorofilled(i,:) = fillmissing(chloro256_lang_rm(i,:),'previous');
    y(i,:) = nufft(chloro256_lang_rm(i,:),t_grid_256(i,:));
end

meanChlorofft = mean(y);

n = length(time);
f = (0:n-1)/n;

ax14 = figure;
plot(f,abs(y),'Color',[0.8 0.8 0.8],'HandleVisibility','off');
hold on
plot(f,abs(meanChlorofft),'Color','red','DisplayName','Mean Chloropigment Across Depth');
hold off
legend();
xlabel('Normalised Frequency');
ylabel('Power Density (N^4) [s^{-4}]');
title('FFT: chl-a(p,t) at HOTS (1989-2021)');
exportgraphics(ax14,'figures/chla-1988-2021_fft.png');